{"version":3,"sources":["components/AddCard.js","components/item.js","components/Box.js","components/CardList.js","components/Board.js","components/LegendTag.js","components/Legend.js","components/App.js","reportWebVitals.js","index.js"],"names":["Modal","setAppElement","AddCard","handleRadio","event","setState","radioValue","target","className","split","state","modalOpen","text","heading","bind","style","textAlign","variant","onClick","width","height","marginTop","backgroundColor","isOpen","this","onRequestClose","overlay","content","top","left","right","bottom","marginRight","transform","id","name","cols","rows","placeholder","type","onChange","t","value","e","margin","props","createCard","Component","ItemTypes","Box","children","color","onBoard","useDrag","item","collect","monitor","isDragging","drag","newWidth","newPosition","ref","display","position","Card","CardContent","weight","justifyContent","alignItems","CardList","useDrop","accept","drop","setCardOnBoard","setLocation","isOver","listCards","cardList","map","listHeadings","clear","Board","useState","setImage","delta","getDifferenceFromInitialOffset","Math","round","x","y","moveCard","background","process","backgroundSize","backgroundRepeat","for","files","img","console","log","URL","createObjectURL","data","FormData","append","axios","post","then","res","statusText","LegendTag","maxLength","valueAtIndex","handleLegendTagChange","arrayIndex","Legend","idx","evt","newLegendTags","helperList","legendTag","sidx","tag","legendList","i","Button","styled","button","legendTags","marginLeft","verticalAlign","padding","window","innerHeight","innerWidth","border","overflow","WebkitOverflowScrolling","borderRadius","outline","layout","w","h","static","rowHeight","abortLegendChanges","commitLegendChanges","App","cards","lastIndex","prevState","elementsIndex","findIndex","element","newArray","document","getElementById","offsetHeight","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ff3b8da.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from 'react-modal'\r\n\r\nModal.setAppElement('#root')\r\n\r\nclass AddCard extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            modalOpen: false,\r\n            text: \"\",\r\n            radioValue: \".dot-white\",\r\n            heading: false,\r\n        }\r\n        this.handleRadio = this.handleRadio.bind(this)\r\n    }\r\n\r\n    //aktualisieren des radioValue/Farbe\r\n    handleRadio = (event) => {\r\n        //splitet className um zweiten dot value zu bekommen\r\n        this.setState({ radioValue: event.target.className.split(' ')[1] });\r\n    }\r\n\r\n    render() {\r\n        return( <div style={{textAlign:\"center\"}}>\r\n            <h4>Überschriften</h4>\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={() => this.setState({ modalOpen: true, heading: true })}\r\n                style={{ width: '12em', height: '4em', textAlign: 'center', /*margin: '2% 25% 2.5% 25%'*/ marginTop:'2%', backgroundColor:'white' }}\r\n            > \r\n            </Button>\r\n            <h4>Karten</h4>\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={() => this.setState({ modalOpen: true })}\r\n                style={{ width: '10em', height: '10em', textAlign: 'center', /*margin: '2% 25% 5% 25%'*/ marginTop:'2%', backgroundColor:'white'}}\r\n            > \r\n            </Button>\r\n            {/* Modal (Fenster was sich im Vordergrund öffnet)*/}\r\n            <Modal\r\n                isOpen={this.state.modalOpen}\r\n                onRequestClose={() => this.setState({ modalOpen: false })}\r\n                style={{\r\n                    overlay: {\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                        textAlign: 'center'\r\n                    },\r\n                    content: {\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        right: 'auto',\r\n                        bottom: 'auto',\r\n                        marginRight: '-50%',\r\n                        transform: 'translate(-50%, -50%)'\r\n                    }\r\n\r\n                }}>\r\n                {/* h2 je nach dem ob Karte oder Uberschrift */}\r\n                {this.state.heading ? <h2>Überschrift erstellen</h2> : <h2>Karte erstellen</h2>}\r\n                <br />\r\n                <textarea\r\n                    id=\"textarea\"\r\n                    name=\"text\"\r\n                    cols=\"35\"\r\n                    rows=\"4\"\r\n                    placeholder=\"Hier Text schreiben\"\r\n                    type=\"text\"\r\n                    onChange={(t) => this.setState({ text: t.target.value })}\r\n                >\r\n                </textarea>\r\n                <br />\r\n                {/* Farbauswahl */}\r\n                <div>\r\n                    <span onClick={(e) => this.handleRadio(e)} className={'dot dot-white'}></span>\r\n                    <span onClick={(e) => this.handleRadio(e)} className={'dot dot-green'}></span>\r\n                    <span onClick={(e) => this.handleRadio(e)} className={'dot dot-yellow'}></span>\r\n                    <span onClick={(e) => this.handleRadio(e)} className={'dot dot-red'}></span>\r\n                    <span onClick={(e) => this.handleRadio(e)} className={'dot dot-purple'}></span>\r\n                    <span onClick={(e) => this.handleRadio(e)} className={'dot dot-blue'}></span>\r\n                    <span onClick={(e) => this.handleRadio(e)} className={'dot dot-lightblue'}></span>\r\n                </div>\r\n                <br />\r\n                {/* Button zum Abbrechen */}\r\n                <Button\r\n                    onClick={() => this.setState({ modalOpen: false, text: \"\", heading: false })}\r\n                    variant=\"contained\"\r\n                    style={{ margin: '15px' }}\r\n                > Abbrechen\r\n                </Button>\r\n                {/* Button Fertig */}\r\n                {/*eslint-disable */}\r\n                <Button onClick={() => (\r\n                    this.setState({ modalOpen: false, text: \"\", heading: false }),\r\n                    this.state.text !== '' ? this.props.createCard(this.state.text, this.state.radioValue, this.state.heading) : null)\r\n                }\r\n                    variant=\"contained\"\r\n                    style={{ margin: '15px' }}\r\n                > Fertig\r\n                </Button>\r\n            </Modal>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default AddCard;\r\n","//Notwendig für Drag and Drop \r\nexport const ItemTypes ={\r\n  CARD: 'card'\r\n}","import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './item'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n//React Komponente als ArrowFunction\r\nexport const Box = ({ id, left, top, children, color, heading, onBoard }) => {\r\n\r\n  //Drag and Drop Hook -> Drag\r\n  const [{ isDragging }, drag] = useDrag({\r\n    //item wird an die Drops weitergereicht\r\n    item: { id, left, top, onBoard, type: ItemTypes.CARD },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  })\r\n\r\n  //Weite abhängig von onBoard\r\n  let newWidth = \"\"\r\n  onBoard ? newWidth = \"10%\" : newWidth = \"39%\"\r\n\r\n  let newPosition=\"\"\r\n  onBoard ? newPosition=\"absolute\" : newPosition = \"relative\"\r\n\r\n  return (\r\n    <div ref={drag} style={{ display: \"inline-block\", position: newPosition, width: newWidth, margin: \"1% 5% 1% 5%\", left, top }}>\r\n      { heading === true ? <div style={{ marginTop: \"25%\" }}></div> : <div style={{ marginTop: \"100%\" }}></div>}\r\n      <Card\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"0\",\r\n          bottom: \"0\",\r\n          left: \"0\",\r\n          right: \"0\",\r\n        }}>\r\n        <CardContent\r\n          className={color}\r\n          style={{ height: \"100%\", weight: \"100%\" }}>\r\n          <div style={{\r\n            height: \"100%\",\r\n            weight: \"100%\",\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n          >\r\n            {children}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div >\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport { Box } from './Box.js'\r\nimport { ItemTypes } from '../components/item'\r\nimport { useDrop } from 'react-dnd'\r\n\r\nfunction CardList(props) {\r\n\r\n    //Drag and Drop Hook -> Drop\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: ItemTypes.CARD,\r\n        drop: (item, monitor) => {\r\n            //Karte wird auf CardList gesetzt\r\n            props.setCardOnBoard(item.id, false)\r\n            //Location resetet\r\n            props.setLocation(item.id, 0, 0)\r\n            return undefined;\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver()\r\n        })\r\n    })\r\n    //alle Karten die nicht auf dem Board sind\r\n    const listCards = props.cardList.map(item => (item.heading === false && item.onBoard === false ?\r\n        <Box key={item.id} id={item.id} left={item.left} top={item.top} color={item.color} onBoard={item.onBoard}>\r\n            {item.text}\r\n        </Box>\r\n        : <div></div>\r\n    ))\r\n\r\n    //alle Uberschriften die nicht auf dem Board sind\r\n    const listHeadings = props.cardList.map(item => (item.heading === true && item.onBoard === false ?\r\n        <Box key={item.id} id={item.id} left={item.left} top={item.top} color={item.color} heading={item.heading} onBoard={item.onBoard} >\r\n            {item.text}\r\n        </Box>\r\n        : <div></div>\r\n    ))\r\n\r\n\r\n    return (\r\n        <div ref={drop} style={{ width: \"100%\", height: \"100%\" }}>\r\n             <h4 style={{textAlign:\"center\"}}>Ungeordnet</h4>\r\n            {listHeadings}{/* Uberschriften */}\r\n            <hr style={{ clear: \"left\", width: \"90%\", margin: \"5%\" }} />{/* Trennlinie */}\r\n            <div  >\r\n                {listCards}{/* Karten */}\r\n            </div>\r\n        </div >)\r\n \r\n}\r\n\r\nexport default CardList;","import React, { useState } from 'react';\r\nimport { ItemTypes } from '../components/item'\r\nimport { useDrop } from 'react-dnd'\r\nimport axios from 'axios';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Box } from './Box.js'\r\n\r\n\r\nfunction Board(props) {\r\n\r\n  //State als Hook\r\n  const [, setImage] = useState(null)\r\n\r\n  //Funktion zum verschieben der Karte(ruft Funktion in App auf um State zu ändern)\r\n  const moveCard = (id, left, top, onBoard) => {\r\n    onBoard ? props.setLocation(id, left, top) : props.setLocation(id, 0, 0)\r\n    }\r\n\r\n  //Drag and Drop Hook -> Drop\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    drop: (item, monitor) => {\r\n      //rechnet left und top aus für location der Karte/Uberschrift\r\n      const delta = monitor.getDifferenceFromInitialOffset();\r\n      const left = Math.round(item.left + delta.x);\r\n      const top = Math.round(item.top + delta.y);\r\n      moveCard(item.id, left, top, item.onBoard);\r\n      //setzt onBoard true -> Karte verschwindet aus CardList\r\n      props.setCardOnBoard(item.id, true);\r\n      return undefined;\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver()\r\n    })\r\n  })\r\n\r\n \r\n  const onImageChange = event => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let img = event.target.files[0];\r\n      console.log(\"Hier \" + event.target.files[0]);\r\n      setImage(\r\n        URL.createObjectURL(img)\r\n      );\r\n      const data = new FormData();\r\n      data.append('username', 'test');\r\n      data.append('filetype', 'background');\r\n      data.append('file', event.target.files[0]);\r\n      axios.post(\"http://localhost:8000/upload_background\", data, { // receive two parameter endpoint url ,form data \r\n      })\r\n        .then(res => { // then print response status\r\n          console.log(res.statusText)\r\n        });\r\n    }\r\n  }\r\n\r\n  //liste von Karten die onBoard==true\r\n  const listCards = props.cardList.map(item => (item.onBoard === true ?\r\n    <Box key={item.id} id={item.id} left={item.left} top={item.top} color={item.color} heading={item.heading} onBoard={item.onBoard}>\r\n      {item.text}\r\n    </Box>\r\n    : <div></div>\r\n  ))\r\n\r\n  return <div ref={drop}\r\n    style={{ background: `url('${process.env.PUBLIC_URL}/test/background.png')`, width: '100%', height: '100%', backgroundSize: 'contain', backgroundRepeat: 'no-repeat'}}>\r\n    <label for=\"ImageUpload\" className=\"ImageInput\"></label>\r\n    <input id=\"ImageUpload\" type=\"file\" name=\"myImage\" onChange={onImageChange} />\r\n    {listCards}{/* Karten/Uberschriften */}\r\n  </div>\r\n}\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\n\r\nclass LegendTag extends Component { \r\n\r\n    render() {\r\n        return( \r\n            <div className=\"Shadow_Element\">  \r\n                <span className={'dot dot-' + this.props.color}></span>\r\n                <input\r\n                    className=\"legend_input\" \r\n                    name=\"text\" \r\n                    placeholder = \"Legendenattribut\"\r\n                    type = \"text\"                                 \r\n                    maxLength= \"20\"            \r\n                    value= {this.props.valueAtIndex}\r\n                    onChange={this.props.handleLegendTagChange(this.props.arrayIndex)}                   \r\n                    >\r\n                </input>\r\n            </div>\r\n        )     \r\n    }\r\n}\r\n\r\nexport default LegendTag;","import React, {Component} from 'react';\r\nimport LegendTag from './LegendTag';\r\nimport styled from 'styled-components';\r\nimport GridLayout from 'react-grid-layout';\r\nimport Modal from 'react-modal' ;\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { AiFillEdit, AiFillInfoCircle} from \"react-icons/ai\";\r\n\r\nModal.setAppElement('#root')\r\nclass Legend extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n             modalOpen: false,\r\n             legendList: [\r\n                {color: \"green\", text: \"\"},\r\n                {color: \"yellow\", text: \"\"},\r\n                {color: \"red\", text: \"\"},\r\n                {color: \"purple\", text: \"\"},\r\n                {color: \"blue\", text: \"\"},\r\n                {color: \"lightblue\", text: \"\"},\r\n                {color: \"white\", text: \"\"},\r\n            ],\r\n            helperList: [\r\n                {tag: \"\"},\r\n                {tag: \"\"},\r\n                {tag: \"\"},\r\n                {tag: \"\"},\r\n                {tag: \"\"},\r\n                {tag: \"\"},\r\n                {tag: \"\"},\r\n            ]            \r\n        }\r\n    }   \r\n\r\n    /* Funktion für OK Button*/\r\n    commitLegendChanges() {\r\n        for (var i=0; i <= 6; i++){\r\n            this.state.legendList[i].text = this.state.helperList[i].tag;\r\n        }\r\n    }\r\n\r\n    /* Funktion für Abbrechen Button*/\r\n    abortLegendChanges() {\r\n        for (var i=0; i <= 6; i++){\r\n            this.state.helperList[i].tag = this.state.legendList[i].text;\r\n        }\r\n    }\r\n\r\n    /* Updaten des Hilfsarrays */\r\n    handleLegendTagChange = idx => evt => {\r\n        const newLegendTags = this.state.helperList.map((legendTag, sidx) => {\r\n          if (idx !== sidx) return legendTag;\r\n          return { ...legendTag, tag: evt.target.value };\r\n        });\r\n    \r\n        this.setState({ helperList: newLegendTags });\r\n      };\r\n          \r\n    render() {        \r\n        /* Style für die Buttons */\r\n        const Button = styled.button`\r\n            background: white;\r\n            border-radius: 4px;\r\n            border: none;\r\n            color: black;\r\n            box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);\r\n            position: absolute`\r\n        ;  \r\n        \r\n        const layout = [\r\n            { i: 'a', x: 0, y: 0, w: 1, h: 3, static: true },\r\n            { i: 'b', x: 1, y: 0, w: 1, h: 3, static: true },\r\n            { i: 'c', x: 0.5, y: 3, w: 1, h: 1, static: true }\r\n           ];\r\n\r\n        const legendTags = this.state.legendList.map(function(item) {\r\n            for (var i = 0; i <= 6; i++){\r\n                if(item.text !== \"\"){\r\n                    return(\r\n                        <div style={{display: \"inline\", marginLeft: 15}}>\r\n                            <span className= {'small-dot dot-' + item.color }/>\r\n                            <div style= {{display: \"inline\", verticalAlign: \"top\"}}>{item.text}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        })\r\n        \r\n        return ( \r\n            <div style={{width:'100%', height:'100%', padding: 10}}>\r\n                {/* Inhalt der Legende */}\r\n                Legende:\r\n\r\n                {/* Ausgabe der Legendenelemente */}\r\n                {legendTags}\r\n\r\n                {/* Button zum Öffnen des Modals */}\r\n                <button className=\"LegendButton\"/*style={{right: 5, top: 2}}*/ onClick={()=> this.setState({modalOpen: true})}></button>\r\n                {/* Modal */}\r\n                <Modal \r\n                    isOpen = {this.state.modalOpen} \r\n                    onRequestClose = {()=>this.setState({modalOpen: false})}\r\n                    style = {{\r\n                        overlay: {backgroundColor: 'rgba(0, 0, 0, 0.5)', textAlign: 'center',},\r\n                        content: {\r\n                            position: 'absolute',\r\n                            top: window.innerHeight * 0.15,\r\n                            left: window.innerWidth * 0.25,\r\n                            right: window.innerWidth * 0.25,\r\n                            bottom: window.innerHeight * 0.15,\r\n                            border: '1px solid #ccc',                            \r\n                            overflow: 'auto',\r\n                            WebkitOverflowScrolling: 'touch',\r\n                            borderRadius: '4px',\r\n                            outline: 'none',\r\n                            padding: 0,                            \r\n                            backgroundColor: '#ECECEC'\r\n                          }             \r\n                    }}\r\n                >\r\n\r\n                    {/* Modal-Inhalt */}\r\n                    <h2 style={{backgroundColor: \"#C4C4C4\", height: 50}}>\r\n                        Farbcodierung hinzufügen \r\n                        <span style={{position: \"absolute\", right: 5}}><AiFillInfoCircle /></span>                 \r\n                    </h2><br/>                      \r\n\r\n                    {/* Legendenfelder */}              \r\n                    <GridLayout className=\"layout\" layout={layout} cols={2} rowHeight={window.innerHeight * 0.1} width={window.innerWidth * 0.5} margin={[50,0]}>\r\n                        <div key=\"a\">\r\n                            {/*grün*/} \r\n                            <LegendTag \r\n                                color = {\"green\"} \r\n                                handleLegendTagChange = {this.handleLegendTagChange} \r\n                                valueAtIndex = {this.state.helperList[0].tag} \r\n                                arrayIndex = {0} \r\n                            /> <br/>   \r\n\r\n                            {/*gelb*/}\r\n                            <LegendTag \r\n                                color = {\"yellow\"} \r\n                                handleLegendTagChange = {this.handleLegendTagChange} \r\n                                valueAtIndex = {this.state.helperList[1].tag} \r\n                                arrayIndex = {1} \r\n                            /><br/>\r\n\r\n                            {/*rot*/}\r\n                            <LegendTag \r\n                                color = {\"red\"} \r\n                                handleLegendTagChange = {this.handleLegendTagChange} \r\n                                valueAtIndex = {this.state.helperList[2].tag} \r\n                                arrayIndex = {2} \r\n                            />                            \r\n                        </div>\r\n\r\n                        <div key=\"b\"> \r\n                            {/*lila*/}  \r\n                                <LegendTag \r\n                                color = {\"purple\"} \r\n                                handleLegendTagChange = {this.handleLegendTagChange} \r\n                                valueAtIndex = {this.state.helperList[3].tag} \r\n                                arrayIndex = {3} \r\n                            /> <br/>\r\n\r\n                            {/*blau*/}  \r\n                            <LegendTag \r\n                                color = {\"blue\"} \r\n                                handleLegendTagChange = {this.handleLegendTagChange} \r\n                                valueAtIndex = {this.state.helperList[4].tag} \r\n                                arrayIndex = {4} \r\n                            /> <br/>\r\n\r\n                            {/*hellblau*/}  \r\n                            <LegendTag \r\n                                color = {\"lightblue\"} \r\n                                handleLegendTagChange = {this.handleLegendTagChange} \r\n                                valueAtIndex = {this.state.helperList[5].tag} \r\n                                arrayIndex = {5} \r\n                            />                                   \r\n                        </div>\r\n\r\n                        <div key=\"c\">                            \r\n                            {/*weiß*/}\r\n                            <LegendTag \r\n                                color = {\"white\"} \r\n                                handleLegendTagChange = {this.handleLegendTagChange} \r\n                                valueAtIndex = {this.state.helperList[6].tag} \r\n                                arrayIndex = {6} \r\n                            />                            \r\n                        </div>\r\n                    </GridLayout>\r\n\r\n                    {/* Buttons */}\r\n                    <Button style= {{left: 20, bottom: 20 }} onClick = {()=> {\r\n                        this.setState({modalOpen: false});\r\n                        this.abortLegendChanges()}}> Abbrechen \r\n                    </Button>\r\n                    <Button style={{right: 20, bottom: 20}}onClick = {()=> {\r\n                        this.setState({modalOpen: false});\r\n                        this.commitLegendChanges()}}> OK\r\n                    </Button>\r\n                </Modal>                \r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default Legend;","import React, { Component } from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport '../css/App.css';\r\nimport AddCard from './AddCard';\r\nimport CardList from './CardList';\r\nimport Board from './Board';\r\nimport Legend from './Legend';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      cards: [\r\n      ],\r\n      lastIndex: 0,\r\n    }\r\n    this.setLocation = this.setLocation.bind(this)\r\n    this.createCard = this.createCard.bind(this)\r\n    this.setCardOnBoard = this.setCardOnBoard.bind(this)\r\n  }\r\n\r\n  //Funktion zum Erstellen von Karten/Uberschriften im State\r\n  createCard(text, color, heading) {\r\n    this.setState(prevState => ({\r\n      //alter State wird kopiert\r\n      cards: [...prevState.cards,\r\n      {\r\n        id: this.state.lastIndex,\r\n        text: text,\r\n        color: color,\r\n        heading: heading,\r\n        onBoard: false,\r\n        left: 0,\r\n        top: 0,\r\n      }],\r\n      lastIndex: this.state.lastIndex + 1,\r\n    }))\r\n  }\r\n\r\n  //Funktion zum Ändern von onBoard im State\r\n  //onBoard ist dazu da um nachzuverfolgen ob eine Karte noch in der Liste ist oder auf dem Board\r\n  setCardOnBoard(id, value) {\r\n    const elementsIndex = this.state.cards.findIndex(element => element.id === id)\r\n    let newArray = [...this.state.cards]\r\n    newArray[elementsIndex] = { ...newArray[elementsIndex], onBoard: value }\r\n    this.setState({\r\n      cards: newArray,\r\n    });\r\n  }\r\n\r\n  //Funktion zum Ändern der Location einer Karte im State\r\n  setLocation(id, left, top) {\r\n    const elementsIndex = this.state.cards.findIndex(element => element.id === id)\r\n    let newArray = [...this.state.cards]\r\n    newArray[elementsIndex] = { ...newArray[elementsIndex], left: left, top: top }\r\n    this.setState({\r\n      cards: newArray,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const layout = [\r\n      { i: 'a', x: 0, y: 0, w: 3, h: 6, static: true },\r\n      { i: 'b', x: 0, y: 6, w: 3, h: 12, static: true },\r\n      { i: 'c', x: 3, y: 0, w: 9, h: 17, static: true },\r\n      { i: 'd', x: 3, y: 17, w: 9, h: 1, static: true }\r\n    ];\r\n\r\n    var headerHeight = document.getElementById(\"header\").offsetHeight;\r\n\r\n    return (\r\n      //DndProvider für Drag and Drop\r\n      <DndProvider backend={HTML5Backend}>\r\n        <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={window.innerHeight / 18} width={window.innerWidth} margin={[0, 0]}>\r\n          <div key=\"a\" style={{ backgroundColor: \"#ECECEC\" }}> {/* Neue Überschrift/Karte Block */}\r\n            <AddCard createCard={this.createCard} />\r\n          </div>\r\n          <div key=\"b\" style={{ backgroundColor: \"#ECECEC\" }}> {/* Noch nicht platzierte Karten Block */}\r\n            <CardList cardList={this.state.cards} setCardOnBoard={this.setCardOnBoard} setLocation={this.setLocation} />\r\n          </div>\r\n          <div key=\"c\" style={{ backgroundColor: \"#565656\", display: \"flex\" }}> {/* Board */}\r\n            <Board cardList={this.state.cards} setCardOnBoard={this.setCardOnBoard} setLocation={this.setLocation} />\r\n          </div>\r\n          <div key=\"d\" style={{ backgroundColor: \"#c4c4c4\" }}> {/* Legende  */}\r\n            <Legend />\r\n          </div>\r\n        </GridLayout>\r\n      </DndProvider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'jquery/dist/jquery.js';\r\nimport 'popper.js/dist/umd/popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}